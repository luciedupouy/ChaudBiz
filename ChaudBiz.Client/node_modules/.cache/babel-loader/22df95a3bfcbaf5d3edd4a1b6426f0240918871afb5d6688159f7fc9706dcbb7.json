{"ast":null,"code":"var _jsxFileName = \"/Users/luciedupouy/chaudbiz/ChaudBiz.Client/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeafletMap = ({\n  address\n}) => {\n  _s();\n  const [coordinates, setCoordinates] = useState(null);\n  useEffect(() => {\n    const fetchCoordinates = async () => {\n      try {\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`);\n        const data = await response.json();\n        if (data && data.length > 0 && data[0].lat && data[0].lon) {\n          const lat = parseFloat(data[0].lat);\n          const lon = parseFloat(data[0].lon);\n          setCoordinates([lat, lon]);\n          console.log(lat);\n          console.log(coordinates);\n        }\n      } catch (error) {\n        console.error('Error fetching coordinates:', error);\n      }\n    };\n    fetchCoordinates();\n  }, [address]);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: coordinates,\n    zoom: 13,\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), coordinates && /*#__PURE__*/_jsxDEV(Marker, {\n      position: coordinates,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(LeafletMap, \"NYagvTsY0KW8OqYwzt5HLaBmVbk=\");\n_c = LeafletMap;\nexport default LeafletMap;\nvar _c;\n$RefreshReg$(_c, \"LeafletMap\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","LeafletMap","address","_s","coordinates","setCoordinates","fetchCoordinates","response","fetch","encodeURIComponent","data","json","length","lat","lon","parseFloat","console","log","error","center","zoom","style","height","width","children","url","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","$RefreshReg$"],"sources":["/Users/luciedupouy/chaudbiz/ChaudBiz.Client/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst LeafletMap = ({ address }) => {\n  const [coordinates, setCoordinates] = useState(null);\n\n  useEffect(() => {\n    const fetchCoordinates = async () => {\n      try {\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`);\n        const data = await response.json();\n        if (data && data.length > 0 && data[0].lat && data[0].lon) {\n          const lat = parseFloat(data[0].lat);\n          const lon = parseFloat(data[0].lon);\n          setCoordinates([lat, lon]);\n          console.log(lat, )\n          console.log(coordinates);\n        }\n      } catch (error) {\n        console.error('Error fetching coordinates:', error);\n      }\n    };\n    fetchCoordinates();\n  }, [address]);\n  \n  \n\n  return (\n    <MapContainer center={coordinates} zoom={13} style={{ height: '400px', width: '100%' }}>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n      {coordinates && (\n        <Marker position={coordinates}>\n          <Popup>{address}</Popup>\n        </Marker>\n      )}\n    </MapContainer>\n  );\n  \n};\n\nexport default LeafletMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,4DAA2DC,kBAAkB,CAACP,OAAO,CAAE,EAAC,CAAC;QACvH,MAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,IAAIF,IAAI,CAAC,CAAC,CAAC,CAACG,GAAG,IAAIH,IAAI,CAAC,CAAC,CAAC,CAACI,GAAG,EAAE;UACzD,MAAMD,GAAG,GAAGE,UAAU,CAACL,IAAI,CAAC,CAAC,CAAC,CAACG,GAAG,CAAC;UACnC,MAAMC,GAAG,GAAGC,UAAU,CAACL,IAAI,CAAC,CAAC,CAAC,CAACI,GAAG,CAAC;UACnCT,cAAc,CAAC,CAACQ,GAAG,EAAEC,GAAG,CAAC,CAAC;UAC1BE,OAAO,CAACC,GAAG,CAACJ,GAAK,CAAC;UAClBG,OAAO,CAACC,GAAG,CAACb,WAAW,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDZ,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAIb,oBACEF,OAAA,CAACL,YAAY;IAACwB,MAAM,EAAEf,WAAY;IAACgB,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrFxB,OAAA,CAACJ,SAAS;MAAC6B,GAAG,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrEzB,WAAW,iBACVJ,OAAA,CAACH,MAAM;MAACiC,QAAQ,EAAE1B,WAAY;MAAAoB,QAAA,eAC5BxB,OAAA,CAACF,KAAK;QAAA0B,QAAA,EAAEtB;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAGnB,CAAC;AAAC1B,EAAA,CAnCIF,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
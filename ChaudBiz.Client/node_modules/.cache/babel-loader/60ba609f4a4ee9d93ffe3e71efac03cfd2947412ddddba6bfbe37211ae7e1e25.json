{"ast":null,"code":"var _jsxFileName = \"/Users/luciedupouy/chaudbiz/ChaudBiz.Client/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeafletMap = ({\n  address\n}) => {\n  _s();\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n  useEffect(() => {\n    const fetchCoordinates = async () => {\n      if (!address) return; // Ne rien faire si l'adresse est vide\n\n      try {\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`);\n        const data = await response.json();\n        if (data && data.length > 0 && data[0].lat && data[0].lon) {\n          setLat(data[0].lat);\n          setLon(data[0].lon);\n          console.log(data[0].lat, data[0].lon);\n        }\n      } catch (error) {\n        console.error('Error fetching coordinates:', error);\n      }\n    };\n    fetchCoordinates();\n  }, [address]);\n  if (lat === null || lon === null) {\n    return null; // Ne rien rendre si les coordonnées ne sont pas disponibles\n  }\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [lat, lon],\n    zoom: 13,\n    style: {\n      height: '100px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: [lat, lon],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(LeafletMap, \"fqfg8h7Y0brwFJJ9SirDYO+bLCQ=\");\n_c = LeafletMap;\nexport default LeafletMap;\nvar _c;\n$RefreshReg$(_c, \"LeafletMap\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","LeafletMap","address","_s","lat","setLat","lon","setLon","fetchCoordinates","response","fetch","encodeURIComponent","data","json","length","console","log","error","center","zoom","style","height","width","children","url","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","$RefreshReg$"],"sources":["/Users/luciedupouy/chaudbiz/ChaudBiz.Client/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst LeafletMap = ({ address }) => {\n  const [lat, setLat] = useState(null);\n  const [lon, setLon] = useState(null);\n\n  useEffect(() => {\n    const fetchCoordinates = async () => {\n      if (!address) return; // Ne rien faire si l'adresse est vide\n\n      try {\n        const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(address)}`);\n        const data = await response.json();\n        if (data && data.length > 0 && data[0].lat && data[0].lon) {\n          setLat(data[0].lat);\n          setLon(data[0].lon);\n          console.log(data[0].lat, data[0].lon);\n        }\n      } catch (error) {\n        console.error('Error fetching coordinates:', error);\n      }\n    };\n    fetchCoordinates();\n  }, [address]);\n\n  if (lat === null || lon === null) {\n    return null; // Ne rien rendre si les coordonnées ne sont pas disponibles\n  }\n\n  return (\n    <MapContainer center={[lat, lon]} zoom={13} style={{ height: '100px', width: '100%' }}>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n      <Marker position={[lat, lon]}>\n        <Popup>{address}</Popup>\n      </Marker>\n    </MapContainer>\n  );\n};\n\nexport default LeafletMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI,CAACN,OAAO,EAAE,OAAO,CAAC;;MAEtB,IAAI;QACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,4DAA2DC,kBAAkB,CAACT,OAAO,CAAE,EAAC,CAAC;QACvH,MAAMU,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,IAAIF,IAAI,CAAC,CAAC,CAAC,CAACR,GAAG,IAAIQ,IAAI,CAAC,CAAC,CAAC,CAACN,GAAG,EAAE;UACzDD,MAAM,CAACO,IAAI,CAAC,CAAC,CAAC,CAACR,GAAG,CAAC;UACnBG,MAAM,CAACK,IAAI,CAAC,CAAC,CAAC,CAACN,GAAG,CAAC;UACnBS,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC,CAACR,GAAG,EAAEQ,IAAI,CAAC,CAAC,CAAC,CAACN,GAAG,CAAC;QACvC;MACF,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDT,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,IAAIE,GAAG,KAAK,IAAI,IAAIE,GAAG,KAAK,IAAI,EAAE;IAChC,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACEN,OAAA,CAACL,YAAY;IAACuB,MAAM,EAAE,CAACd,GAAG,EAAEE,GAAG,CAAE;IAACa,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACpFvB,OAAA,CAACJ,SAAS;MAAC4B,GAAG,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtE5B,OAAA,CAACH,MAAM;MAACgC,QAAQ,EAAE,CAACzB,GAAG,EAAEE,GAAG,CAAE;MAAAiB,QAAA,eAC3BvB,OAAA,CAACF,KAAK;QAAAyB,QAAA,EAAErB;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB,CAAC;AAACzB,EAAA,CAnCIF,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}